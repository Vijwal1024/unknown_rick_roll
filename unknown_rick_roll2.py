_00 = __import__('collections').defaultdict
_01 = chr,ord
_02 = int;_=_02()==_02()
_03 = len
_04 = lambda _0:print (end=_01[_-_](_0))
_05:_02 = _<<((0x00for x in _06.cell_size)//(_<<_)+_)
_06 = """+[----->+++<]>+.++++++++++++..----.+++.+[-->+<]>.-----------..++[--->++<]>+...---[++>---<]>.--[----->++<]>+.----------.++++++.-.+.+[->+++<]>.+++.[->+++<]>-.--[--->+<]>-.++++++++++++.--.+++[->+++++<]>-.++[--->++<]>+.-[->+++<]>-.--[--->+<]>-.++[->+++<]>+.+++++.++[->+++<]>+.----[->++<]>.[-->+<]>++.[----->++++<]>.-[->++++++<]>-.-[-->+++<]>-.+[++>---<]>.[--->++<]>-.-[-->+<]>--.+[-->+++<]>.+++[->++++<]>-.>+[--->++<]>++.+++++++++++.[->++++++<]>-."""
def _07(_0_):
  _1_=_00 (_02)
  _2_=_3_=_4_=_02()
  def _0(_0):
    _1_[_0]+=_
    _1_[_0]%=_05
    return _0,_02()
  def _1(_0):
    _1_[_0]-=_
    _1_[_0]%=_05
    return _0,_02()
  _2 = lambda _0:(_0-_,_-_)
  _3 = lambda _0:(_0--_,_-_)
  def _4(_0):
    _04(_1_[_0])
    return _0,_02()
  def _5(_0):
    _1 = __import__('sys').stdin
    _2 = _1.read
    _3 = _2(_)
    _1_[_0] = _01[_](_3)
    return _0,_02()
  def _6(_0):
    _1 =+ (not _1_[_0])
    return _0,_1
  def _7(_0):
    _1 =- (not not _1_[_0])
    return _0,_1
  _5_ = '[',']'
  while _03(_0_)>_3_>=_02():
    _6_ = {'+':_0,'-':_1,'<':_2,'>':_3,'.':_4,',':_5,_5_[_-_]:_6,_5_[_]:_7}
    if _0_[_3_]in _6_:
      _7_ = _6_[_0_[_3_]]
      if _4_:
        if   _0_[_3_]==_5_[_]  :_4_-=_
        elif _0_[_3_]==_5_[_-_]:_4_+=_
      else:  _2_,_4_ = _7_(_2_)
    _3_+=_-(_<<_)*(_4_<_02())
_07(_06)
